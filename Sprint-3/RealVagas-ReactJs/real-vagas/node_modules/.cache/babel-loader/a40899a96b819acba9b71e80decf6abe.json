{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinic\\\\Desktop\\\\Senai-CodeCreators\\\\Sprint-3\\\\RealVagas-ReactJs\\\\real-vagas\\\\src\\\\pages\\\\Vagas\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport { parseJWT } from '../../services/auth';\nimport ButtonInscricao from '../../components/Button-inscricao';\nimport ImgLupa from '../../assets/image/icone-busca.png';\nimport '../../assets/style/global.css';\nimport './style.css';\n\nfunction Vagas() {\n  // Variáveis para o Modal funcionar\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = id => {\n    const item = vagas.filter(element => element.id === id);\n    setModal(item);\n    setShow(true);\n  }; //Começo funcionalidades vagas\n  //useState é um Hook que te permite adicionar o state do React a um componente de função.\n  //O state, em React, é onde guardamos os dados do nosso componente\n\n\n  const [cargoVaga, setCargoVaga] = useState('');\n  const [nomeEmpresa, setNomeEmpresa] = useState('');\n  const [inscricao, setInscricao] = useState('');\n  const [inscricaoTrue, setInscricaoTrue] = useState([]);\n  const [inscricoes, setInscricoes] = useState([]);\n  const [idVaga, setIdVaga] = useState(0); //numero 0 pois é um int Id\n\n  const [vagas, setVagas] = useState([]);\n  const [modal, setModal] = useState([]);\n  useEffect(() => {\n    listar();\n    InscricoesUsuario();\n    parseJWT();\n  }, []); //Listar vagas\n\n  const UrlVagas = 'http://localhost:5000/api/Vagas';\n\n  const listar = () => {\n    fetch(UrlVagas, {\n      method: 'GET'\n    }).then(response => response.json()).then(dados => {\n      setVagas(dados);\n    }).catch(Erro => console.error(Erro));\n  }; //Função para buscar a vaga\n\n\n  function buscarVaga(cargo) {\n    //Paramêtro: cargo é uma string\n    //se vagas for diferente de indefinido ele executa\n    if (vagas.length != 0) {\n      //Variavel Filtrados com filter para a pesquisa de vagas.\n      //O que o filter faz: A função Filter recebe como parâmetro uma função de callback, onde o retorno dado será um novo array com os elementos que passaram na validação realizada. Lembrando que o array original não é alterado, trazendo assim um dos conceitos da programação funcional.   \n      //vaga: any define que vaga pode ser qualquer tipo de objeto, podendo ser int, string etc.\n      //=> (arrow function) vaga.cargo busca pelo nome da vaga que se denomina \"cargo\" na array\n      //toUpperCase define que todas as letras vao ser maiusculas\n      //includes determina se um conjunto de caracteres pode ser encontrado dentro de outra string, retornando true ou false. ou seja, ele pesquisa e se existir é true se n existir é false, retorna ou não retorna\n      //O parametro dentro do includes serve para todas as vagas aparecerem quando n há nada digitado no input de pesquisa.\n      var filtrados = vagas.filter(vaga => vaga.cargo.toUpperCase().includes(cargo.toUpperCase()));\n      console.log(filtrados); //Se os filtrador forem diferente de indefinido ele executa\n\n      if (filtrados != undefined) return filtrados; //Retorna a vaga que o usuario pesquisou\n    }\n\n    return vagas; //Retorna todas as vagas\n  }\n\n  ; // // Obtém a data/hora atual\n  // var data = new Date();\n  // // Guarda cada pedaço em uma variável\n  // var dia = data.getDate();           // 1-31\n  // var dia_sem = data.getDay();            // 0-6 (zero=domingo)\n  // var mes = data.getMonth();          // 0-11 (zero=janeiro)\n  // var ano4 = data.getFullYear();       // 4 dígitos\n  // var hora = data.getHours();          // 0-23\n  // var min = data.getMinutes();        // 0-59\n  // var seg = data.getSeconds();        // 0-59\n  // var mseg = data.getMilliseconds();   // 0-999\n  // var tz = data.getTimezoneOffset(); // em minutos\n  // // Formata a data e a hora (note o mês + 1)\n  // var str_hora = hora + ':' + min + ':' + seg; \n  // var str_data = ano4 +'/'+ (mes + 1) + '/' + dia ;\n  // // Mostra o resultado\n  // console.log(str_data);\n  //Postar inscricao\n\n  const Inscrito = id => {\n    var inscricao = {};\n    var Metodo = \"\";\n    var UrlInscricao = \"\";\n    const itemBuscado = Object.values(inscricoes).filter(user => user.idVaga === id);\n    var IdInscricao = itemBuscado.length != 0 ? Object.values(itemBuscado[0])[0] : false;\n    console.log(itemBuscado.length);\n    UrlInscricao = itemBuscado.length == 0 ? \"http://localhost:5000/api/Inscricao/\" : \"http://localhost:5000/api/Inscricao/\" + IdInscricao;\n    Metodo = itemBuscado.length == 0 ? \"POST\" : \"PUT\";\n    var putStatus = itemBuscado.length != 0 && Object.values(itemBuscado[0])[1] == false ? true : false;\n\n    if (itemBuscado.length == 0) {\n      inscricao = {\n        statusInscricao: true,\n        dataInscricao: new Date(),\n        idVaga: id,\n        idUsuario: parseInt(localStorage.getItem(\"Real-Vagas-Id-Usuario\"))\n      };\n    } else {\n      inscricao = {\n        statusInscricao: putStatus,\n        dataInscricao: new Date(),\n        idVaga: id,\n        idUsuario: parseInt(localStorage.getItem(\"Real-Vagas-Id-Usuario\"))\n      };\n    }\n\n    console.log(JSON.stringify(inscricao));\n    console.log(Metodo);\n    console.log(UrlInscricao);\n    fetch(UrlInscricao, {\n      method: Metodo,\n      body: JSON.stringify(inscricao),\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('Real-Vagas-Token'),\n        'content-type': 'application/json' //Tipo do conteudo é uma aplicação Json\n\n      }\n    }).then(() => {\n      var putButton = itemBuscado.length == 0 ? id : Object.values(itemBuscado[0])[3];\n      console.log(putButton);\n      ButtonChange(putButton);\n      InscricoesUsuario();\n    }).catch(Erro => console.error(Erro));\n  };\n\n  var idUsuarioInsc = localStorage.getItem(\"Real-Vagas-Id-Usuario\"); //Listar as inscrições do usuário\n\n  const InscricoesUsuario = () => {\n    fetch(\"http://localhost:5000/api/Inscricao/ListarById/id?id=\" + idUsuarioInsc, {\n      method: 'GET',\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('Real-Vagas-Token'),\n        'content-type': 'application/json' //Tipo do conteudo é uma aplicação Json\n\n      }\n    }).then(response => response.json()).then(dados => {\n      setInscricoes(dados);\n    }).catch(Erro => console.error(Erro));\n  };\n\n  function ButtonChange(id) {\n    if (inscricoes.length !== 0) {\n      const itemBuscado = Object.values(inscricoes).filter(user => user.idVaga === id);\n      var string = \"\";\n      var bool;\n      itemBuscado.map(item => {\n        bool = item.statusInscricao;\n      });\n\n      if (bool == true) {\n        string = \"Inscrito\";\n      } else {\n        string = \"Inscrever-se\";\n      }\n\n      return string;\n    } else {\n      return \"Inscrever-se\";\n    }\n  }\n\n  const formatter = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL',\n    minimumFractionDigits: 2\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vagas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, \"Encontre a sua vaga!\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      buscarVaga(cargoVaga);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pesquisa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ImgLupa,\n    alt: \"Icone de uma lupa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"InputEdit\",\n    value: cargoVaga,\n    onChange: e => setCargoVaga(e.target.value),\n    placeholder: \"Buscar vaga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }))), //Chama função buscar vaga junto com as vagas no paramêtro.\n  buscarVaga(cargoVaga).map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fetch\",\n      key: item.idVagas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Conteudo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TitleImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: atob(item.foto),\n      alt: \"Foto vaga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 45\n      }\n    }, item.cargo), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    }, item.localVaga), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 45\n      }\n    }, 'Salário: R$ ' + formatter.format(item.salario)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inscricao\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ButtonInscricao, {\n      id: \"Botao\",\n      onClick: () => Inscrito(item.id),\n      value: ButtonChange(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"verMais\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleShow(item.id),\n      id: \"btn1\",\n      value: \"VerMais\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 45\n      }\n    }, \"Ver mais...\")))));\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, modal.map(dado => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      className: \"Modal\",\n      show: show,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      id: \"ModalColor\",\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"ModalColor1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 37\n      }\n    }, dado.nomeEmpresa)), /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"ModalBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bodyModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: atob(dado.foto),\n      alt: \"Foto vaga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 45\n      }\n    }, dado.cargo), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 45\n      }\n    }, dado.localVaga), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 45\n      }\n    }, 'Salário: ' + dado.salario.toFixed(3)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"informacoes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ulInformacoes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 45\n      }\n    }, \"Informa\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 49\n      }\n    }, 'Recrutador: ' + dado.nomeRecrutador), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"liInformacoesMeio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 49\n      }\n    }, 'Quantidade de vagas: ' + dado.qntVagas), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 49\n      }\n    }, 'Tipo de contrato: ' + dado.tipoContrato))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 41\n      }\n    }, dado.descricao))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      id: \"ModalColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"btn\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 37\n      }\n    }, \"Fechar\"), /*#__PURE__*/React.createElement(ButtonInscricao, {\n      id: \"btn\",\n      onClick: () => Inscrito(dado.id),\n      value: ButtonChange(dado.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 37\n      }\n    })));\n  })));\n}\n\nexport default Vagas;","map":{"version":3,"sources":["C:/Users/vinic/Desktop/Senai-CodeCreators/Sprint-3/RealVagas-ReactJs/real-vagas/src/pages/Vagas/index.tsx"],"names":["React","useEffect","useState","Modal","Button","Footer","Header","parseJWT","ButtonInscricao","ImgLupa","Vagas","show","setShow","handleClose","handleShow","id","item","vagas","filter","element","setModal","cargoVaga","setCargoVaga","nomeEmpresa","setNomeEmpresa","inscricao","setInscricao","inscricaoTrue","setInscricaoTrue","inscricoes","setInscricoes","idVaga","setIdVaga","setVagas","modal","listar","InscricoesUsuario","UrlVagas","fetch","method","then","response","json","dados","catch","Erro","console","error","buscarVaga","cargo","length","filtrados","vaga","toUpperCase","includes","log","undefined","Inscrito","Metodo","UrlInscricao","itemBuscado","Object","values","user","IdInscricao","putStatus","statusInscricao","dataInscricao","Date","idUsuario","parseInt","localStorage","getItem","JSON","stringify","body","headers","authorization","putButton","ButtonChange","idUsuarioInsc","string","bool","map","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","event","preventDefault","e","target","value","idVagas","atob","foto","localVaga","format","salario","dado","toFixed","nomeRecrutador","qntVagas","tipoContrato","descricao"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/Header';\r\nimport { parseJWT } from '../../services/auth';\r\nimport ButtonInscricao from '../../components/Button-inscricao';\r\nimport ImgLupa from '../../assets/image/icone-busca.png';\r\nimport '../../assets/style/global.css';\r\nimport './style.css';\r\n\r\n\r\nfunction Vagas() {\r\n\r\n    // Variáveis para o Modal funcionar\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (id: any) => {\r\n        const item = vagas.filter((element: any) => element.id === id);\r\n        setModal(item);\r\n        setShow(true);\r\n    }\r\n\r\n    //Começo funcionalidades vagas\r\n\r\n    //useState é um Hook que te permite adicionar o state do React a um componente de função.\r\n    //O state, em React, é onde guardamos os dados do nosso componente\r\n    const [cargoVaga, setCargoVaga] = useState('');\r\n    const [nomeEmpresa, setNomeEmpresa] = useState('')\r\n\r\n    const [inscricao, setInscricao] = useState('');\r\n    const [inscricaoTrue, setInscricaoTrue] = useState([]);\r\n    const [inscricoes, setInscricoes] = useState([]);\r\n\r\n\r\n    const [idVaga, setIdVaga] = useState(0); //numero 0 pois é um int Id\r\n    const [vagas, setVagas] = useState([]);\r\n\r\n    const [modal, setModal] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listar();\r\n        InscricoesUsuario();\r\n        parseJWT();\r\n    }, []);\r\n\r\n    //Listar vagas\r\n    const UrlVagas = 'http://localhost:5000/api/Vagas';\r\n\r\n    const listar = () => {\r\n\r\n        fetch(UrlVagas, {\r\n            method: 'GET'\r\n\r\n        })\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setVagas(dados)\r\n            })\r\n\r\n            .catch(Erro => console.error(Erro));\r\n    }\r\n\r\n    //Função para buscar a vaga\r\n    function buscarVaga(cargo: string) { //Paramêtro: cargo é uma string\r\n\r\n        //se vagas for diferente de indefinido ele executa\r\n        if (vagas.length != 0) {\r\n            //Variavel Filtrados com filter para a pesquisa de vagas.\r\n            //O que o filter faz: A função Filter recebe como parâmetro uma função de callback, onde o retorno dado será um novo array com os elementos que passaram na validação realizada. Lembrando que o array original não é alterado, trazendo assim um dos conceitos da programação funcional.   \r\n            //vaga: any define que vaga pode ser qualquer tipo de objeto, podendo ser int, string etc.\r\n            //=> (arrow function) vaga.cargo busca pelo nome da vaga que se denomina \"cargo\" na array\r\n            //toUpperCase define que todas as letras vao ser maiusculas\r\n            //includes determina se um conjunto de caracteres pode ser encontrado dentro de outra string, retornando true ou false. ou seja, ele pesquisa e se existir é true se n existir é false, retorna ou não retorna\r\n            //O parametro dentro do includes serve para todas as vagas aparecerem quando n há nada digitado no input de pesquisa.\r\n            var filtrados = vagas.filter((vaga: any) => vaga.cargo.toUpperCase().includes(cargo.toUpperCase()));\r\n            console.log(filtrados)\r\n            //Se os filtrador forem diferente de indefinido ele executa\r\n            if (filtrados != undefined)\r\n                return filtrados; //Retorna a vaga que o usuario pesquisou\r\n        }\r\n        return vagas; //Retorna todas as vagas\r\n    }\r\n\r\n\r\n    ;\r\n\r\n    // // Obtém a data/hora atual\r\n    // var data = new Date();\r\n\r\n    // // Guarda cada pedaço em uma variável\r\n    // var dia = data.getDate();           // 1-31\r\n    // var dia_sem = data.getDay();            // 0-6 (zero=domingo)\r\n    // var mes = data.getMonth();          // 0-11 (zero=janeiro)\r\n    // var ano4 = data.getFullYear();       // 4 dígitos\r\n    // var hora = data.getHours();          // 0-23\r\n    // var min = data.getMinutes();        // 0-59\r\n    // var seg = data.getSeconds();        // 0-59\r\n    // var mseg = data.getMilliseconds();   // 0-999\r\n    // var tz = data.getTimezoneOffset(); // em minutos\r\n\r\n    // // Formata a data e a hora (note o mês + 1)\r\n    // var str_hora = hora + ':' + min + ':' + seg; \r\n    // var str_data = ano4 +'/'+ (mes + 1) + '/' + dia ;\r\n\r\n    // // Mostra o resultado\r\n    // console.log(str_data);\r\n\r\n    //Postar inscricao\r\n\r\n\r\n    const Inscrito = (id: any) => {\r\n        var inscricao = {};\r\n        var Metodo = \"\";\r\n        var UrlInscricao = \"\";\r\n        const itemBuscado = Object.values(inscricoes).filter((user:any)=> user.idVaga === id)\r\n\r\n        var IdInscricao = (itemBuscado.length != 0 ) ? Object.values(itemBuscado[0])[0] : false;\r\n\r\n        console.log(itemBuscado.length)\r\n        UrlInscricao = (itemBuscado.length == 0) ? \"http://localhost:5000/api/Inscricao/\" : \"http://localhost:5000/api/Inscricao/\" + IdInscricao;\r\n\r\n        Metodo = (itemBuscado.length == 0) ? \"POST\" : \"PUT\";\r\n\r\n        var putStatus = (itemBuscado.length != 0 && Object.values(itemBuscado[0])[1] == false)? true : false;\r\n\r\n        if (itemBuscado.length == 0) {\r\n            inscricao = {\r\n                statusInscricao: true,\r\n                dataInscricao: new Date(),\r\n                idVaga: id,\r\n                idUsuario: parseInt(localStorage.getItem(\"Real-Vagas-Id-Usuario\") as any)\r\n            }\r\n        } \r\n        else\r\n        {\r\n            inscricao = {\r\n                statusInscricao: putStatus,\r\n                dataInscricao: new Date(),\r\n                idVaga: id,\r\n                idUsuario: parseInt(localStorage.getItem(\"Real-Vagas-Id-Usuario\") as any)\r\n            }\r\n        }\r\n\r\n        console.log(JSON.stringify(inscricao));\r\n        console.log(Metodo);\r\n        console.log(UrlInscricao)\r\n\r\n        fetch(UrlInscricao, {\r\n            method: Metodo,\r\n            body: JSON.stringify(inscricao),\r\n            headers: {\r\n                authorization: 'Bearer ' + localStorage.getItem('Real-Vagas-Token'),\r\n                'content-type': 'application/json', //Tipo do conteudo é uma aplicação Json\r\n            },\r\n        })\r\n        .then(()=>{\r\n            var putButton = (itemBuscado.length == 0)? id : Object.values(itemBuscado[0])[3]; \r\n            console.log(putButton)\r\n            ButtonChange(putButton);\r\n            InscricoesUsuario();\r\n        })\r\n            .catch(Erro => console.error(Erro));\r\n\r\n    }\r\n\r\n\r\n    var idUsuarioInsc = localStorage.getItem(\"Real-Vagas-Id-Usuario\") as any;\r\n\r\n    //Listar as inscrições do usuário\r\n    const InscricoesUsuario = () => {\r\n        fetch(\"http://localhost:5000/api/Inscricao/ListarById/id?id=\" + idUsuarioInsc, {\r\n            method: 'GET',\r\n            headers: {\r\n                authorization: 'Bearer ' + localStorage.getItem('Real-Vagas-Token'),\r\n                'content-type': 'application/json', //Tipo do conteudo é uma aplicação Json\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setInscricoes(dados)\r\n            })\r\n\r\n            .catch(Erro => console.error(Erro));\r\n    }\r\n\r\n\r\n    function ButtonChange(id: any) {\r\n        if(inscricoes.length !== 0)\r\n        {\r\n            const itemBuscado = Object.values(inscricoes).filter((user:any)=> user.idVaga === id)\r\n            var string = \"\";\r\n            var bool;\r\n\r\n            itemBuscado.map((item: any) => {\r\n                bool = item.statusInscricao\r\n            })\r\n            \r\n            if (bool == true) {\r\n                \r\n                string = \"Inscrito\";\r\n            }\r\n            else {\r\n                string = \"Inscrever-se\";\r\n            }\r\n            \r\n            return string;\r\n        }else{\r\n            return \"Inscrever-se\";\r\n        }\r\n    }\r\n\r\n\r\n        const formatter = new Intl.NumberFormat('pt-BR', {\r\n        style: 'currency',\r\n        currency: 'BRL',\r\n        minimumFractionDigits: 2\r\n            })\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"vagas\">\r\n                <div className=\"title\">\r\n                    <h1>Encontre a sua vaga!</h1>\r\n                </div>\r\n\r\n                {/* Formulário para enviar/executar/chamar uma ação */}\r\n                <form onSubmit={event => {\r\n                    event.preventDefault();\r\n                    buscarVaga(cargoVaga);\r\n                }}>\r\n                    <div className=\"pesquisa\">\r\n                        <img src={ImgLupa} alt=\"Icone de uma lupa\" />\r\n                        {/* Mecanismo de pesquisa de vagas*/}\r\n                        <input type=\"text\" id=\"InputEdit\" value={cargoVaga} onChange={e => setCargoVaga(e.target.value)} placeholder=\"Buscar vaga\"></input>\r\n                    </div>\r\n                </form>\r\n                {\r\n                    //Chama função buscar vaga junto com as vagas no paramêtro.\r\n                    buscarVaga(cargoVaga).map((item: any) => {\r\n                        return (\r\n                            <div className=\"fetch\" key={item.idVagas}>\r\n                                <div className=\"Conteudo\" >\r\n                                    <div className=\"TitleImg\">\r\n                                        <div className=\"img\">\r\n                                            {/* Imagem da vaga */}\r\n                                            <img src={atob(item.foto)} alt=\"Foto vaga\" />\r\n                                        </div>\r\n                                        <div className=\"title1\">\r\n                                            {/* Nome da vaga */}\r\n                                            <h1>{item.cargo}</h1>\r\n\r\n                                            {/* Local da vaga */}\r\n                                            <h2>{item.localVaga}</h2>\r\n\r\n                                            {/* Salário */}\r\n                                            <h3>{'Salário: R$ ' + formatter.format(item.salario)}</h3>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"buttons\">\r\n                                        <div className=\"inscricao\">\r\n                                            {/* Botão para inscrever-se na vaga */}\r\n                                            <ButtonInscricao id=\"Botao\" onClick={() => Inscrito(item.id)} value={ButtonChange(item.id)} />\r\n                                        </div>\r\n                                        <div className=\"verMais\">\r\n                                            {/* Botão para ver mais informação sobre a vaga */}\r\n                                            <button onClick={() => handleShow(item.id)} id=\"btn1\" value=\"VerMais\">Ver mais...</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Footer />\r\n            <div>\r\n                {\r\n                    modal.map((dado: any) => {\r\n                        return (\r\n                            <Modal className=\"Modal\" show={show} onHide={handleClose} >\r\n                                <Modal.Header id=\"ModalColor\" closeButton>\r\n                                    <Modal.Title id=\"ModalColor1\" >{dado.nomeEmpresa}</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body className=\"ModalBody\">\r\n                                    <div className=\"bodyModal\">\r\n                                        <div className=\"img\">\r\n                                            {/* Imagem da vaga */}\r\n                                            <img src={atob(dado.foto)} alt=\"Foto vaga\" />\r\n                                        </div>\r\n                                        <div className=\"title1\">\r\n                                            {/* Nome da vaga */}\r\n                                            <h1>{dado.cargo}</h1>\r\n\r\n                                            {/* Local da vaga */}\r\n                                            <h2>{dado.localVaga}</h2>\r\n\r\n                                            {/* Salário */}\r\n                                            <h3>{'Salário: '+ dado.salario.toFixed(3)}</h3>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"informacoes\">\r\n                                        <div className=\"ulInformacoes\">\r\n                                            <h5>Informações</h5>\r\n                                            <ul>\r\n                                                <li>{'Recrutador: ' + dado.nomeRecrutador}</li>\r\n                                                <li id=\"liInformacoesMeio\">{'Quantidade de vagas: ' + dado.qntVagas}</li>\r\n                                                <li>{'Tipo de contrato: ' + dado.tipoContrato}</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <p>{dado.descricao}</p>\r\n                                    </div>\r\n\r\n                                </Modal.Body>\r\n                                <Modal.Footer id=\"ModalColor\">\r\n                                    <Button id=\"btn\" onClick={handleClose}>Fechar</Button>\r\n                                    <ButtonInscricao id=\"btn\" onClick={() => Inscrito(dado.id)} value={ButtonChange(dado.id)} />\r\n                                </Modal.Footer>\r\n                            </Modal >\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Vagas;"]},"metadata":{},"sourceType":"module"}