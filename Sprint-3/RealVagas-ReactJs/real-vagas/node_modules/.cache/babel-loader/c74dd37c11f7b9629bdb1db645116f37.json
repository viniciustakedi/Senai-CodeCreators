{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinic\\\\Desktop\\\\Senai-CodeCreators\\\\Sprint-3\\\\RealVagas-ReactJs\\\\real-vagas\\\\src\\\\pages\\\\Login\\\\index.tsx\";\nimport React, { useState } from \"react\";\nimport \"../../assets/style/global.css\"; // import \"./style.css\";\n\nimport Header from \"../../components/Header/index\";\nimport Footer from \"../../components/Footer/index\";\nimport { useHistory } from \"react-router-dom\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport { Container } from \"react-bootstrap\";\n\nfunction Login() {\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\"); //Como se fosse {get; set;}\n\n  const [senha, setSenha] = useState(\"\"); // acessar e alterar //get set\n\n  const login = () => {\n    //Arrow function login\n    const login = {\n      //váriavel login para armazenar um array {}\n      email: email,\n      senha: senha //Acessando e alterando (modelo) os dados como se fosse no postman\n\n    };\n    fetch(\"http://localhost:5000/api/Login\", {\n      //Fetch passando a url da API\n      method: \"POST\",\n      //Como é um login o método é o Post\n      body: JSON.stringify(login),\n      //Seleciona o tipo do corpo, no caso é json (Postman: Raw/Json)\n      headers: {\n        \"content-type\": \"application/json\" //Tipo do conteudo é uma aplicação Json\n\n      }\n    }).then(response => response.json()).then(dados => {\n      if (dados.token != undefined) {\n        //Se dados token for diferente de Undefined\n        localStorage.setItem(\"Real-Vagas-Token\", dados.token);\n        localStorage.setItem(\"Real-Vagas-Token\", dados.token); //Local storage irá adicionar esta chave ao storage, ou atualizar o valor caso a chave já exista\n\n        history.push(\"/\"); //Push indicando que ele está empurrando o usuário para uma pagina, no caso a Home\n      } else alert(\"Email ou senha inválidos\"); //Alerta caso o email ou senha estejam errados\n\n    }).catch(error => console.error(error)); // Como usando o fetch colocamos um catch caso algo de errado.\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"log\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      login();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"Email\",\n    name: \"Email\",\n    label: \"E-mail\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"Password\",\n    name: \"Senha\",\n    label: \"Senha\",\n    onChange: e => setSenha(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"esqcSenha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, \"Esqueceu sua senha?\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"Enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cadastre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Cadastre-se\"))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/vinic/Desktop/Senai-CodeCreators/Sprint-3/RealVagas-ReactJs/real-vagas/src/pages/Login/index.tsx"],"names":["React","useState","Header","Footer","useHistory","Input","Button","Container","Login","history","email","setEmail","senha","setSenha","login","fetch","method","body","JSON","stringify","headers","then","response","json","dados","token","undefined","localStorage","setItem","push","alert","catch","error","console","event","preventDefault","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../../assets/style/global.css\";\r\n// import \"./style.css\";\r\nimport Header from \"../../components/Header/index\";\r\nimport Footer from \"../../components/Footer/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction Login() {\r\n    let history = useHistory();\r\n\r\n    const [email, setEmail] = useState(\"\"); //Como se fosse {get; set;}\r\n    const [senha, setSenha] = useState(\"\"); // acessar e alterar //get set\r\n\r\n    const login = () => {\r\n        //Arrow function login\r\n        const login = {\r\n            //váriavel login para armazenar um array {}\r\n            email: email,\r\n            senha: senha, //Acessando e alterando (modelo) os dados como se fosse no postman\r\n        };\r\n\r\n        fetch(\"http://localhost:5000/api/Login\", {\r\n            //Fetch passando a url da API\r\n            method: \"POST\", //Como é um login o método é o Post\r\n            body: JSON.stringify(login), //Seleciona o tipo do corpo, no caso é json (Postman: Raw/Json)\r\n            headers: {\r\n                \"content-type\": \"application/json\", //Tipo do conteudo é uma aplicação Json\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((dados) => {\r\n                if (dados.token != undefined) {\r\n                    //Se dados token for diferente de Undefined\r\n                    localStorage.setItem(\"Real-Vagas-Token\", dados.token);\r\n                    localStorage.setItem(\"Real-Vagas-Token\", dados.token);  //Local storage irá adicionar esta chave ao storage, ou atualizar o valor caso a chave já exista\r\n                    history.push(\"/\"); //Push indicando que ele está empurrando o usuário para uma pagina, no caso a Home\r\n                } else alert(\"Email ou senha inválidos\"); //Alerta caso o email ou senha estejam errados\r\n            })\r\n            \r\n            .catch((error) => console.error(error)); // Como usando o fetch colocamos um catch caso algo de errado.\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"log\">\r\n                <form\r\n                    onSubmit={(event) => {\r\n                        event.preventDefault();\r\n                        login();\r\n                    }}\r\n                >\r\n                    <Container fluid>\r\n                        <div className=\"login-container\">\r\n                            <div className=\"login-flex\">\r\n                                <h1>Login</h1>\r\n                            </div>\r\n                            <div className=\"email\">\r\n                                <Input type=\"Email\" name=\"Email\" label=\"E-mail\" onChange={(e) => setEmail(e.target.value)} />\r\n                            </div>\r\n\r\n                            <div className=\"senha\">\r\n                                <Input type=\"Password\" name=\"Senha\" label=\"Senha\" onChange={(e) => setSenha(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"esqcSenha\">\r\n                                <p>Esqueceu sua senha?</p>\r\n                            </div>\r\n                            <div className=\"submit\">\r\n                                <Button name=\"Enviar\" />\r\n                            </div>\r\n                            <div className=\"cadastre\"></div>\r\n                            <p>Cadastre-se</p>\r\n                        </div>\r\n                    </Container>\r\n                </form>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}