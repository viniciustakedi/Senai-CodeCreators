{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henri\\\\Desktop\\\\Senai-CodeCreators\\\\Sprint-3\\\\RealVagas-ReactJs\\\\real-vagas\\\\src\\\\pages\\\\CadastrarVagas\\\\index.tsx\";\nimport React, { useState } from 'react';\nimport './style.css';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport Input from '../../components/Input';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport seta from '../../assets/image/seta.png';\nimport Logo from '../../assets/image/Logo.png';\n\nfunction Oportunidade() {\n  let history = useHistory();\n  const [empresa, setEmpresa] = useState('');\n  const [recrutador, setRecrutador] = useState('');\n  const [local, setLocal] = useState('');\n  const [cargo, setCargo] = useState('');\n  const [contrato, setContrato] = useState('');\n  const [publicacao, setPublicacao] = useState(new Date());\n  const [qtdVagas, setqtdVagas] = useState(0);\n  const [salario, setSalario] = useState(0.00);\n  const [descricao, setDescricao] = useState(\"\");\n  const [foto, setFoto] = useState('');\n  const [combinar, setCombinar] = useState(false);\n\n  const handleClick = () => setCombinar(!combinar);\n\n  function ConvertImg(item) {\n    if (item.length > 0) {\n      var fileToLoad = item[0];\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (fileLoadedEvent) {\n        var base64value = fileLoadedEvent.target.result;\n        setFoto(btoa(base64value));\n      };\n\n      fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n\n  var IdEmpresa = localStorage.getItem(\"Real-Vagas-Id-Usuario\");\n\n  const Salvar = () => {\n    const form = {\n      nomeRecrutador: recrutador,\n      localVaga: local,\n      tipoContrato: contrato,\n      dataPublicacao: publicacao,\n      cargo: cargo,\n      qntVagas: qtdVagas,\n      salario: combinar == true ? 0.00 : salario,\n      descricao: descricao,\n      foto: foto,\n      statusVaga: true,\n      idEmpresa: parseInt(IdEmpresa)\n    };\n    console.log(JSON.stringify(form));\n    fetch(\"http://localhost:5000/api/Vagas\", {\n      headers: {\n        authorization: 'Bearer ' + localStorage.getItem('Real-Vagas-Token'),\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify(form)\n    }).then(() => {\n      history.push(\"/Dashboard\");\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  function formatToCurrency(item) {\n    let amount = parseInt(item);\n    return \"R$\" + amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"express\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      Salvar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-express\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"express-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    id: \"seta\",\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: seta,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 81\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-principal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 45\n    }\n  }, \"Cadastro de vaga\"))), /*#__PURE__*/React.createElement(Col, {\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"express-cont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setEmpresa(e.target.value),\n    className: \"inputsVagas\",\n    id: \"campo\",\n    label: \"Nome da empresa:\",\n    name: \"NomeEmpresa:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setLocal(e.target.value),\n    className: \"inputsVagas\",\n    id: \"campo\",\n    label: \"Local:\",\n    name: \"Local\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setCargo(e.target.value),\n    className: \"inputsVagas\",\n    id: \"campo\",\n    label: \"Nome do cargo:\",\n    name: \"NomeCargo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    disabled: combinar,\n    onKeyUp: e => formatToCurrency(e.currentTarget.value),\n    onChange: e => {\n      formatToCurrency(e.currentTarget.value);\n      setSalario(parseFloat(e.target.value));\n    },\n    className: \"inputsVagas\",\n    label: \"Valor do sal\\xE1rio:\",\n    name: \"salario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputPerson\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Descricao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, \"Descri\\xE7\\xE3o da vaga:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: e => setDescricao(e.target.value),\n    id: \"campo\",\n    name: \"Descricao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setRecrutador(e.target.value),\n    className: \"inputsVagas\",\n    id: \"campo\",\n    label: \"Nome do recrutador(a):\",\n    name: \"recrutador\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setContrato(e.target.value),\n    className: \"inputsVagas\",\n    id: \"campo\",\n    label: \"Tipo de contrato:\",\n    name: \"contrato\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    onChange: e => setqtdVagas(parseInt(e.target.value)),\n    className: \"inputsVagas\",\n    id: \"campo\",\n    label: \"Quantidade de vagas:\",\n    name: \"QuantidadeVagas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"toggle-menu\",\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onClick: handleClick,\n    checked: combinar,\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }, \"\\xC1 combinar sal\\xE1rio\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FilePerson\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => ConvertImg(e.target.files),\n    id: \"arquivo\",\n    type: \"file\",\n    label: \"Selecione o logo da empresa\",\n    name: \"arquivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btnVagas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"submit\",\n    label: \"publicas\",\n    value: \"Publicar vaga\",\n    name: \"Publicar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Oportunidade;","map":{"version":3,"sources":["C:/Users/henri/Desktop/Senai-CodeCreators/Sprint-3/RealVagas-ReactJs/real-vagas/src/pages/CadastrarVagas/index.tsx"],"names":["React","useState","Footer","Header","Input","useHistory","Link","Col","Container","Row","seta","Logo","Oportunidade","history","empresa","setEmpresa","recrutador","setRecrutador","local","setLocal","cargo","setCargo","contrato","setContrato","publicacao","setPublicacao","Date","qtdVagas","setqtdVagas","salario","setSalario","descricao","setDescricao","foto","setFoto","combinar","setCombinar","handleClick","ConvertImg","item","length","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","base64value","target","result","btoa","readAsDataURL","IdEmpresa","localStorage","getItem","Salvar","form","nomeRecrutador","localVaga","tipoContrato","dataPublicacao","qntVagas","statusVaga","idEmpresa","parseInt","console","log","JSON","stringify","fetch","headers","authorization","method","body","then","push","catch","err","error","formatToCurrency","amount","toFixed","replace","e","preventDefault","value","currentTarget","parseFloat","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './style.css';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/Header';\r\nimport Input from '../../components/Input';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport seta from '../../assets/image/seta.png';\r\nimport Logo from '../../assets/image/Logo.png';\r\nimport { stringify } from 'querystring';\r\n\r\nfunction Oportunidade() {\r\n    let history = useHistory();\r\n\r\n    const [empresa, setEmpresa] = useState('');\r\n    const [recrutador, setRecrutador] = useState('');\r\n    const [local, setLocal] = useState('');\r\n    const [cargo, setCargo] = useState('');\r\n    const [contrato, setContrato] = useState('');\r\n    const [publicacao, setPublicacao] = useState(new Date());\r\n    const [qtdVagas, setqtdVagas] = useState(0);\r\n    const [salario, setSalario] = useState(0.00);\r\n    const [descricao, setDescricao] = useState(\"\");\r\n    const [foto, setFoto] = useState('');\r\n    const [combinar, setCombinar] = useState(false);\r\n\r\n    const handleClick = () => setCombinar(!combinar);\r\n\r\n    function ConvertImg(item: any) {\r\n        if (item.length > 0) {\r\n            var fileToLoad = item[0];\r\n            var fileReader = new FileReader();\r\n            fileReader.onload = function (fileLoadedEvent: any) {\r\n                var base64value = fileLoadedEvent.target.result;\r\n                setFoto(btoa(base64value));\r\n            };\r\n            fileReader.readAsDataURL(fileToLoad);\r\n        }\r\n    }\r\n\r\n    var IdEmpresa = localStorage.getItem(\"Real-Vagas-Id-Usuario\") as any;\r\n\r\n    const Salvar = () => {\r\n        const form = {\r\n            nomeRecrutador: recrutador,\r\n            localVaga: local,\r\n            tipoContrato: contrato,\r\n            dataPublicacao: publicacao,\r\n            cargo: cargo,\r\n            qntVagas: qtdVagas,\r\n            salario: (combinar == true) ? 0.00 : salario,\r\n            descricao: descricao,\r\n            foto: foto,\r\n            statusVaga: true,\r\n            idEmpresa: parseInt(IdEmpresa)\r\n        };\r\n        console.log(JSON.stringify(form))\r\n\r\n        fetch(\"http://localhost:5000/api/Vagas\", {\r\n            headers: {\r\n                authorization: 'Bearer ' + localStorage.getItem('Real-Vagas-Token'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(form)\r\n        })\r\n            .then(() => {\r\n                history.push(\"/Dashboard\");\r\n            }).catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n    function formatToCurrency(item:any){\r\n        let amount = parseInt(item);\r\n       return \"R$\" + amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"express\">\r\n                <form onSubmit={e => {\r\n                    e.preventDefault();\r\n                    Salvar();\r\n                }}>\r\n\r\n                    <div className=\"container-express\">\r\n\r\n                        <div className=\"express-title\">\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col id=\"seta\" xs={1}><Link to=\"/Dashboard\"><img src={seta} alt=\"\" /></Link></Col>\r\n                                    <Col xs={10}>\r\n                                        <div className=\"title-principal\">\r\n                                            <img src={Logo} />\r\n                                            <h3>Cadastro de vaga</h3>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col xs={1}></Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </div>\r\n\r\n                        <div className=\"express-cont\">\r\n                            <div>\r\n                                <Input onChange={e => setEmpresa(e.target.value)} className=\"inputsVagas\" id=\"campo\" label=\"Nome da empresa:\" name=\"NomeEmpresa:\" />\r\n                                <Input onChange={e => setLocal(e.target.value)} className=\"inputsVagas\" id=\"campo\" label=\"Local:\" name=\"Local\" />\r\n                                <Input onChange={e => setCargo(e.target.value)} className=\"inputsVagas\" id=\"campo\" label=\"Nome do cargo:\" name=\"NomeCargo\" />\r\n                                <Input disabled={combinar} onKeyUp={e => formatToCurrency(e.currentTarget.value)} onChange={e =>{formatToCurrency(e.currentTarget.value); setSalario(parseFloat(e.target.value))}} className=\"inputsVagas\" label=\"Valor do salário:\" name=\"salario\" />\r\n                                <div className=\"inputPerson\">\r\n                                    <label htmlFor=\"Descricao\">Descrição da vaga:</label>\r\n                                    <textarea onChange={e => setDescricao(e.target.value)} id=\"campo\" name=\"Descricao\"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <Input onChange={e => setRecrutador(e.target.value)} className=\"inputsVagas\" id=\"campo\" label=\"Nome do recrutador(a):\" name=\"recrutador\" />\r\n                                <Input onChange={e => setContrato(e.target.value)} className=\"inputsVagas\" id=\"campo\" label=\"Tipo de contrato:\" name=\"contrato\" />\r\n                                <Input type=\"number\" onChange={e => setqtdVagas(parseInt(e.target.value))} className=\"inputsVagas\" id=\"campo\" label=\"Quantidade de vagas:\" name=\"QuantidadeVagas\" />\r\n                                <div className=\"toggle\">\r\n                                    <label id=\"toggle-menu\" className=\"switch\">\r\n                                        <input onClick={handleClick} checked={combinar} type=\"checkbox\" />\r\n                                        <span className=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label>Á combinar salário</label>\r\n                                </div>\r\n                                <div className=\"FilePerson\">\r\n                                    <Input onChange={e => ConvertImg(e.target.files)} id=\"arquivo\" type=\"file\" label=\"Selecione o logo da empresa\" name=\"arquivo\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"btnVagas\">\r\n                            <Input type=\"submit\" label=\"publicas\" value=\"Publicar vaga\" name=\"Publicar\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Oportunidade;"]},"metadata":{},"sourceType":"module"}