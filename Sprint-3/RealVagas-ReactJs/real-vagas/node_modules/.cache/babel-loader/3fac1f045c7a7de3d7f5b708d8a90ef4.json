{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinic\\\\Desktop\\\\Senai-CodeCreators\\\\Sprint-3\\\\RealVagas-ReactJs\\\\real-vagas\\\\src\\\\pages\\\\Vagas\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport Input from '../../components/Input';\nimport ButtonInscricao from '../../components/Button-inscricao';\nimport ImgLupa from '../../assets/image/icone-busca.png';\nimport '../../assets/style/global.css';\nimport './style.css';\n\nfunction Vagas() {\n  // Variáveis para o Modal funcionar\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = id => {\n    const item = vagas.filter(element => element.id === id);\n    setModal(item);\n    setShow(true);\n  }; //Começo funcionalidades vagas\n\n\n  const [vaga, setVaga] = useState(''); //duas '' pois é uma string\n\n  const [idVaga, setIdVaga] = useState(0); //numero 0 pois é um int Id\n\n  const [empresas, setEmpresas] = useState([]);\n  const [vagas, setVagas] = useState([]);\n  const [modal, setModal] = useState([]);\n  useEffect(() => {\n    listar();\n  }, []); //Listar vagas\n\n  const UrlVagas = 'http://localhost:5000/api/Vagas';\n\n  const listar = () => {\n    fetch(UrlVagas, {\n      method: 'GET'\n    }).then(response => response.json()).then(dados => {\n      setVagas(dados);\n      console.log(dados);\n    }).catch(Erro => console.error(Erro));\n  }; //Pesquisa de vaga\n\n\n  var InputName = document.getElementById('BtnPesquisa');\n  const Buscando = vagas.map(e => e.cargo == InputName);\n\n  function Buscar() {\n    if (Buscando != null) {\n      return Buscando;\n    } else {\n      return 'Erro';\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vagas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \"Encontre a sua vaga!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pesquisa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ImgLupa,\n    alt: \"Icone de uma lupa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"InputEdit\",\n    name: \"pesquisa\",\n    label: \"\",\n    placeholder: \"Buscar vaga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btnPesquisa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"BtnPesquisa\",\n    onClick: Buscar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  }, \"Buscar\"))), vagas.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fetch\",\n      key: item.idVagas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Conteudo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TitleImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\",\n      alt: \"Foto vaga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 57\n      }\n    }, item.cargo), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 57\n      }\n    }, item.localVaga), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 57\n      }\n    }, 'Salário: R$ ' + item.salario))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inscricao\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ButtonInscricao, {\n      value: \"Inscrever-se\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"verMais\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleShow(item.id),\n      id: \"btn1\",\n      value: \"VerMais\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 57\n      }\n    }, \"Ver mais...\")))));\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, modal.map(dado => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      className: \"Modal\",\n      show: show,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      id: \"ModalColor\",\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"ModalColor1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 49\n      }\n    }, dado.idEmpresa.Nome)), /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"ModalBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bodyModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\",\n      alt: \"Foto vaga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 57\n      }\n    }, dado.cargo), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 57\n      }\n    }, dado.localVaga), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 57\n      }\n    }, 'Salário: R$ ' + dado.salario))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"informacoes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ulInformacoes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 57\n      }\n    }, \"Informa\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 61\n      }\n    }, 'Recrutador: ' + dado.nomeRecrutador), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"liInformacoesMeio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 61\n      }\n    }, 'Quantidade de vagas: ' + dado.qntVagas), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 61\n      }\n    }, 'Tipo de contrato: ' + dado.tipoContrato))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 53\n      }\n    }, dado.descricao))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      id: \"ModalColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"btn\",\n      variant: \"primary\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 49\n      }\n    }, \"Inscrever-se\")));\n  })));\n}\n\nexport default Vagas;","map":{"version":3,"sources":["C:/Users/vinic/Desktop/Senai-CodeCreators/Sprint-3/RealVagas-ReactJs/real-vagas/src/pages/Vagas/index.tsx"],"names":["React","useEffect","useState","Modal","Button","Footer","Header","Input","ButtonInscricao","ImgLupa","Vagas","show","setShow","handleClose","handleShow","id","item","vagas","filter","element","setModal","vaga","setVaga","idVaga","setIdVaga","empresas","setEmpresas","setVagas","modal","listar","UrlVagas","fetch","method","then","response","json","dados","console","log","catch","Erro","error","InputName","document","getElementById","Buscando","map","e","cargo","Buscar","idVagas","localVaga","salario","dado","idEmpresa","Nome","nomeRecrutador","qntVagas","tipoContrato","descricao"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/Header';\r\nimport Input from '../../components/Input';\r\nimport ButtonInscricao from '../../components/Button-inscricao';\r\nimport ImgLupa from '../../assets/image/icone-busca.png';\r\nimport '../../assets/style/global.css';\r\nimport './style.css';\r\n\r\n\r\nfunction Vagas() {\r\n\r\n    // Variáveis para o Modal funcionar\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (id: any) => {\r\n        const item = vagas.filter((element: any) => element.id === id);\r\n        setModal(item);\r\n        setShow(true);\r\n    }\r\n\r\n    //Começo funcionalidades vagas\r\n    const [vaga, setVaga] = useState(''); //duas '' pois é uma string\r\n    const [idVaga, setIdVaga] = useState(0); //numero 0 pois é um int Id\r\n\r\n    const [empresas, setEmpresas] = useState([]);\r\n    const [vagas, setVagas] = useState([]);\r\n    const [modal, setModal] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n    //Listar vagas\r\n    const UrlVagas = 'http://localhost:5000/api/Vagas';\r\n\r\n    const listar = () => {\r\n\r\n        fetch(UrlVagas, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setVagas(dados)\r\n                console.log(dados);\r\n            })\r\n\r\n            .catch(Erro => console.error(Erro));\r\n    }\r\n\r\n\r\n    //Pesquisa de vaga\r\n    var InputName = document.getElementById('BtnPesquisa');\r\n    const Buscando = vagas.map((e:any) => e.cargo == InputName );\r\n    function Buscar() {\r\n        if(Buscando != null) {\r\n            return Buscando;\r\n        }\r\n        else\r\n        {\r\n            return 'Erro';\r\n        }\r\n    }\r\n\r\n\r\n                return (\r\n                    <div>\r\n                        <Header />\r\n                        <div className=\"vagas\">\r\n                            <div className=\"title\">\r\n                                <h1>Encontre a sua vaga!</h1>\r\n                            </div>\r\n                            <div className=\"pesquisa\">\r\n                                <img src={ImgLupa} alt=\"Icone de uma lupa\" />\r\n                                {/* Mecanismo de pesquisa de vagas */}\r\n                                <Input id=\"InputEdit\" name=\"pesquisa\" label=\"\" placeholder=\"Buscar vaga\" />\r\n                                <div className=\"btnPesquisa\">\r\n                                    <button className=\"BtnPesquisa\" onClick={Buscar} >Buscar</button>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                vagas.map((item: any) => {\r\n                                    return (\r\n                                        <div className=\"fetch\" key={item.idVagas}>\r\n                                            <div className=\"Conteudo\" >\r\n                                                <div className=\"TitleImg\">\r\n                                                    <div className=\"img\">\r\n                                                        {/* Imagem da vaga */}\r\n                                                        <img src=\"\" alt=\"Foto vaga\" />\r\n                                                    </div>\r\n                                                    <div className=\"title1\">\r\n                                                        {/* Nome da vaga */}\r\n                                                        <h1>{item.cargo}</h1>\r\n\r\n                                                        {/* Local da vaga */}\r\n                                                        <h2>{item.localVaga}</h2>\r\n\r\n                                                        {/* Salário */}\r\n                                                        <h3>{'Salário: R$ ' + item.salario}</h3>\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"buttons\">\r\n                                                    <div className=\"inscricao\">\r\n                                                        {/* Botão para inscrever-se na vaga */}\r\n                                                        <ButtonInscricao value=\"Inscrever-se\" />\r\n                                                    </div>\r\n                                                    <div className=\"verMais\">\r\n                                                        {/* Botão para ver mais informação sobre a vaga */}\r\n                                                        <button onClick={() => handleShow(item.id)} id=\"btn1\" value=\"VerMais\">Ver mais...</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <Footer />\r\n                        <div>\r\n                            {\r\n                                modal.map((dado: any) => {\r\n                                    return (\r\n                                        <Modal className=\"Modal\" show={show} onHide={handleClose} >\r\n                                            <Modal.Header id=\"ModalColor\" closeButton>\r\n                                                <Modal.Title id=\"ModalColor1\" >{dado.idEmpresa.Nome}</Modal.Title>\r\n                                            </Modal.Header>\r\n                                            <Modal.Body className=\"ModalBody\">\r\n                                                <div className=\"bodyModal\">\r\n                                                    <div className=\"img\">\r\n                                                        {/* Imagem da vaga */}\r\n                                                        <img src=\"\" alt=\"Foto vaga\" />\r\n                                                    </div>\r\n                                                    <div className=\"title1\">\r\n                                                        {/* Nome da vaga */}\r\n                                                        <h1>{dado.cargo}</h1>\r\n\r\n                                                        {/* Local da vaga */}\r\n                                                        <h2>{dado.localVaga}</h2>\r\n\r\n                                                        {/* Salário */}\r\n                                                        <h3>{'Salário: R$ ' + dado.salario}</h3>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"informacoes\">\r\n                                                    <div className=\"ulInformacoes\">\r\n                                                        <h5>Informações</h5>\r\n                                                        <ul>\r\n                                                            <li>{'Recrutador: ' + dado.nomeRecrutador}</li>\r\n                                                            <li id=\"liInformacoesMeio\">{'Quantidade de vagas: ' + dado.qntVagas}</li>\r\n                                                            <li>{'Tipo de contrato: ' + dado.tipoContrato}</li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                    <p>{dado.descricao}</p>\r\n                                                </div>\r\n\r\n                                            </Modal.Body>\r\n                                            <Modal.Footer id=\"ModalColor\">\r\n                                                <Button id=\"btn\" variant=\"primary\" onClick={handleClose}>Inscrever-se</Button>\r\n                                            </Modal.Footer>\r\n                                        </Modal >\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            export default Vagas;"]},"metadata":{},"sourceType":"module"}