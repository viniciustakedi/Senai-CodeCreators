{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinic\\\\Desktop\\\\Senai-CodeCreators\\\\Sprint-3\\\\RealVagas-ReactJs\\\\real-vagas\\\\src\\\\pages\\\\Vagas\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport ButtonInscricao from '../../components/Button-inscricao';\nimport ImgLupa from '../../assets/image/icone-busca.png';\nimport '../../assets/style/global.css';\nimport './style.css';\n\nfunction Vagas() {\n  // Variáveis para o Modal funcionar\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = id => {\n    const item = vagas.filter(element => element.id === id);\n    setModal(item);\n    setShow(true);\n  }; //Começo funcionalidades vagas\n  //useState é um Hook que te permite adicionar o state do React a um componente de função.\n  //O state, em React, é onde guardamos os dados do nosso componente\n\n\n  const [cargoVaga, setCargoVaga] = useState('');\n  const [nomeEmpresa, setNomeEmpresa] = useState('');\n  const [vaga, setVaga] = useState(''); //duas '' pois é uma string\n\n  const [idVaga, setIdVaga] = useState(0); //numero 0 pois é um int Id\n\n  const [vagas, setVagas] = useState([]);\n  const [modal, setModal] = useState([]);\n  useEffect(() => {\n    listar();\n  }, []); //Listar vagas\n\n  const UrlVagas = 'http://localhost:5000/api/Vagas';\n\n  const listar = () => {\n    fetch(UrlVagas, {\n      method: 'GET'\n    }).then(response => response.json()).then(dados => {\n      setVagas(dados);\n      console.log(dados);\n    }).catch(Erro => console.error(Erro));\n  };\n\n  const parseJWT = () => {\n    var token = localStorage.getItem(\"Real-Vagas-Token\");\n\n    if (token) {\n      var base64Url = token.split('.')[1];\n      var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      let tipo = JSON.parse(jsonPayload);\n      let acesso = Object.values(tipo)[2];\n      let id = Object.values(tipo)[1];\n      localStorage.setItem(\"Real-Vagas-Id-Usuario\", id);\n      console.log(tipo);\n      return acesso;\n    }\n  }; //Função para buscar a vaga\n\n\n  function buscarVaga(cargo) {\n    //Paramêtro: cargo é uma string\n    parseJWT();\n    console.log(localStorage.getItem(\"Real-Vagas-Id-Usuario\")); //se vagas for diferente de indefinido ele executa\n\n    if (vagas != undefined) {\n      //Variavel Filtrados com filter para a pesquisa de vagas.\n      //O que o filter faz: A função Filter recebe como parâmetro uma função de callback, onde o retorno dado será um novo array com os elementos que passaram na validação realizada. Lembrando que o array original não é alterado, trazendo assim um dos conceitos da programação funcional.   \n      //vaga: any define que vaga pode ser qualquer tipo de objeto, podendo ser int, string etc.\n      //=> (arrow function) vaga.cargo busca pelo nome da vaga que se denomina \"cargo\" na array\n      //toUpperCase define que todas as letras vao ser maiusculas\n      //includes determina se um conjunto de caracteres pode ser encontrado dentro de outra string, retornando true ou false. ou seja, ele pesquisa e se existir é true se n existir é false, retorna ou não retorna\n      //O parametro dentro do includes serve para todas as vagas aparecerem quando n há nada digitado no input de pesquisa.\n      var filtrados = vagas.filter(vaga => vaga.cargo.toUpperCase().includes(cargo.toUpperCase())); //Se os filtrador forem diferente de indefinido ele executa\n\n      if (filtrados != undefined) return filtrados; //Retorna a vaga que o usuario pesquisou\n    }\n\n    return vagas; //Retorna todas as vagas\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vagas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Encontre a sua vaga!\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      buscarVaga(cargoVaga);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pesquisa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ImgLupa,\n    alt: \"Icone de uma lupa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"InputEdit\",\n    value: cargoVaga,\n    onChange: e => setCargoVaga(e.target.value),\n    placeholder: \"Buscar vaga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }))), //Chama função buscar vaga junto com as vagas no paramêtro.\n  buscarVaga(cargoVaga).map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fetch\",\n      key: item.idVagas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Conteudo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TitleImg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\",\n      alt: \"Foto vaga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 45\n      }\n    }, item.cargo), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 45\n      }\n    }, item.localVaga), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 45\n      }\n    }, 'Salário: R$ ' + item.salario))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inscricao\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ButtonInscricao, {\n      value: \"Inscrever-se\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"verMais\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleShow(item.id),\n      id: \"btn1\",\n      value: \"VerMais\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 45\n      }\n    }, \"Ver mais...\")))));\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, modal.map(dado => {\n    return /*#__PURE__*/React.createElement(Modal, {\n      className: \"Modal\",\n      show: show,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      id: \"ModalColor\",\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"ModalColor1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    }, dado.nomeEmpresa)), /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"ModalBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bodyModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\",\n      alt: \"Foto vaga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 45\n      }\n    }, dado.cargo), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 45\n      }\n    }, dado.localVaga), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 45\n      }\n    }, 'Salário: R$ ' + dado.salario))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"informacoes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ulInformacoes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 45\n      }\n    }, \"Informa\\xE7\\xF5es\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 49\n      }\n    }, 'Recrutador: ' + dado.nomeRecrutador), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"liInformacoesMeio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 49\n      }\n    }, 'Quantidade de vagas: ' + dado.qntVagas), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 49\n      }\n    }, 'Tipo de contrato: ' + dado.tipoContrato))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 41\n      }\n    }, dado.descricao))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      id: \"ModalColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      id: \"btn\",\n      variant: \"primary\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }, \"Inscrever-se\")));\n  })));\n}\n\nexport default Vagas;","map":{"version":3,"sources":["C:/Users/vinic/Desktop/Senai-CodeCreators/Sprint-3/RealVagas-ReactJs/real-vagas/src/pages/Vagas/index.tsx"],"names":["React","useEffect","useState","Modal","Button","Footer","Header","ButtonInscricao","ImgLupa","Vagas","show","setShow","handleClose","handleShow","id","item","vagas","filter","element","setModal","cargoVaga","setCargoVaga","nomeEmpresa","setNomeEmpresa","vaga","setVaga","idVaga","setIdVaga","setVagas","modal","listar","UrlVagas","fetch","method","then","response","json","dados","console","log","catch","Erro","error","parseJWT","token","localStorage","getItem","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","tipo","JSON","parse","acesso","Object","values","setItem","buscarVaga","cargo","undefined","filtrados","toUpperCase","includes","event","preventDefault","e","target","value","idVagas","localVaga","salario","dado","nomeRecrutador","qntVagas","tipoContrato","descricao"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport Footer from '../../components/Footer';\r\nimport Header from '../../components/Header';\r\nimport Input from '../../components/Input';\r\nimport ButtonInscricao from '../../components/Button-inscricao';\r\nimport ImgLupa from '../../assets/image/icone-busca.png';\r\nimport '../../assets/style/global.css';\r\nimport './style.css';\r\nimport { isJSDocVariadicType } from 'typescript';\r\n\r\n\r\nfunction Vagas() {\r\n\r\n    // Variáveis para o Modal funcionar\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    const handleShow = (id: any) => {\r\n        const item = vagas.filter((element: any) => element.id === id);\r\n        setModal(item);\r\n        setShow(true);\r\n    }\r\n\r\n    //Começo funcionalidades vagas\r\n\r\n    //useState é um Hook que te permite adicionar o state do React a um componente de função.\r\n    //O state, em React, é onde guardamos os dados do nosso componente\r\n    const [cargoVaga, setCargoVaga] = useState('');\r\n    const [nomeEmpresa, setNomeEmpresa] = useState('')\r\n\r\n\r\n    const [vaga, setVaga] = useState(''); //duas '' pois é uma string\r\n    const [idVaga, setIdVaga] = useState(0); //numero 0 pois é um int Id\r\n\r\n    const [vagas, setVagas] = useState([]);\r\n    const [modal, setModal] = useState([]);\r\n\r\n    useEffect(() => {\r\n        listar();\r\n    }, []);\r\n\r\n    //Listar vagas\r\n    const UrlVagas = 'http://localhost:5000/api/Vagas';\r\n\r\n    const listar = () => {\r\n\r\n        fetch(UrlVagas, {\r\n            method: 'GET'\r\n\r\n        })\r\n            .then(response => response.json())\r\n            .then(dados => {\r\n                setVagas(dados)\r\n                console.log(dados);\r\n            })\r\n\r\n            .catch(Erro => console.error(Erro));\r\n    }\r\n\r\n\r\n    const parseJWT = () =>{\r\n        var token = localStorage.getItem(\"Real-Vagas-Token\");\r\n        if(token){\r\n            var base64Url = token.split('.')[1];\r\n            var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n            var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n            }).join(''));\r\n            \r\n            let tipo = JSON.parse(jsonPayload);\r\n            let acesso = Object.values(tipo)[2];\r\n            let id = Object.values(tipo)[1] as string;\r\n            localStorage.setItem(\"Real-Vagas-Id-Usuario\", id);\r\n            console.log(tipo);\r\n    \r\n            return acesso;\r\n        }\r\n    }\r\n\r\n    //Função para buscar a vaga\r\n    function buscarVaga(cargo: string) { //Paramêtro: cargo é uma string\r\n\r\n        parseJWT();\r\n        console.log(localStorage.getItem(\"Real-Vagas-Id-Usuario\"));\r\n\r\n        //se vagas for diferente de indefinido ele executa\r\n        if (vagas != undefined) { \r\n\r\n            //Variavel Filtrados com filter para a pesquisa de vagas.\r\n            //O que o filter faz: A função Filter recebe como parâmetro uma função de callback, onde o retorno dado será um novo array com os elementos que passaram na validação realizada. Lembrando que o array original não é alterado, trazendo assim um dos conceitos da programação funcional.   \r\n            //vaga: any define que vaga pode ser qualquer tipo de objeto, podendo ser int, string etc.\r\n            //=> (arrow function) vaga.cargo busca pelo nome da vaga que se denomina \"cargo\" na array\r\n            //toUpperCase define que todas as letras vao ser maiusculas\r\n            //includes determina se um conjunto de caracteres pode ser encontrado dentro de outra string, retornando true ou false. ou seja, ele pesquisa e se existir é true se n existir é false, retorna ou não retorna\r\n            //O parametro dentro do includes serve para todas as vagas aparecerem quando n há nada digitado no input de pesquisa.\r\n            var filtrados = vagas.filter((vaga: any) => vaga.cargo.toUpperCase().includes(cargo.toUpperCase()))\r\n\r\n            //Se os filtrador forem diferente de indefinido ele executa\r\n            if (filtrados != undefined)\r\n                return filtrados; //Retorna a vaga que o usuario pesquisou\r\n        }\r\n        return vagas; //Retorna todas as vagas\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"vagas\">\r\n                <div className=\"title\">\r\n                    <h1>Encontre a sua vaga!</h1>\r\n                </div>\r\n\r\n            {/* Formulário para enviar/executar/chamar uma ação */}\r\n                <form onSubmit={event => {\r\n                    event.preventDefault();\r\n                    buscarVaga(cargoVaga);\r\n                }}>\r\n                    <div className=\"pesquisa\">\r\n                        <img src={ImgLupa} alt=\"Icone de uma lupa\" />\r\n                        {/* Mecanismo de pesquisa de vagas*/}\r\n                        <input type=\"text\" id=\"InputEdit\" value={cargoVaga} onChange={e => setCargoVaga(e.target.value)} placeholder=\"Buscar vaga\"></input>\r\n                    </div>\r\n                </form>\r\n                {\r\n                    //Chama função buscar vaga junto com as vagas no paramêtro.\r\n                    buscarVaga(cargoVaga).map((item: any) => {\r\n                        return (\r\n                            <div className=\"fetch\" key={item.idVagas}>\r\n                                <div className=\"Conteudo\" >\r\n                                    <div className=\"TitleImg\">\r\n                                        <div className=\"img\">\r\n                                            {/* Imagem da vaga */}\r\n                                            <img src=\"\" alt=\"Foto vaga\" />\r\n                                        </div>\r\n                                        <div className=\"title1\">\r\n                                            {/* Nome da vaga */}\r\n                                            <h1>{item.cargo}</h1>\r\n\r\n                                            {/* Local da vaga */}\r\n                                            <h2>{item.localVaga}</h2>\r\n\r\n                                            {/* Salário */}\r\n                                            <h3>{'Salário: R$ ' + item.salario}</h3>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"buttons\">\r\n                                        <div className=\"inscricao\">\r\n                                            {/* Botão para inscrever-se na vaga */}\r\n                                            <ButtonInscricao value=\"Inscrever-se\" />\r\n                                        </div>\r\n                                        <div className=\"verMais\">\r\n                                            {/* Botão para ver mais informação sobre a vaga */}\r\n                                            <button onClick={() => handleShow(item.id)} id=\"btn1\" value=\"VerMais\">Ver mais...</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Footer />\r\n            <div>\r\n                {\r\n                    modal.map((dado: any) => {\r\n                        return (\r\n                            <Modal className=\"Modal\" show={show} onHide={handleClose} >\r\n                                <Modal.Header id=\"ModalColor\" closeButton>\r\n                                    <Modal.Title id=\"ModalColor1\" >{dado.nomeEmpresa}</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body className=\"ModalBody\">\r\n                                    <div className=\"bodyModal\">\r\n                                        <div className=\"img\">\r\n                                            {/* Imagem da vaga */}\r\n                                            <img src=\"\" alt=\"Foto vaga\" />\r\n                                        </div>\r\n                                        <div className=\"title1\">\r\n                                            {/* Nome da vaga */}\r\n                                            <h1>{dado.cargo}</h1>\r\n\r\n                                            {/* Local da vaga */}\r\n                                            <h2>{dado.localVaga}</h2>\r\n\r\n                                            {/* Salário */}\r\n                                            <h3>{'Salário: R$ ' + dado.salario}</h3>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"informacoes\">\r\n                                        <div className=\"ulInformacoes\">\r\n                                            <h5>Informações</h5>\r\n                                            <ul>\r\n                                                <li>{'Recrutador: ' + dado.nomeRecrutador}</li>\r\n                                                <li id=\"liInformacoesMeio\">{'Quantidade de vagas: ' + dado.qntVagas}</li>\r\n                                                <li>{'Tipo de contrato: ' + dado.tipoContrato}</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <p>{dado.descricao}</p>\r\n                                    </div>\r\n\r\n                                </Modal.Body>\r\n                                <Modal.Footer id=\"ModalColor\">\r\n                                    <Button id=\"btn\" variant=\"primary\" onClick={handleClose}>Inscrever-se</Button>\r\n                                </Modal.Footer>\r\n                            </Modal >\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Vagas;"]},"metadata":{},"sourceType":"module"}