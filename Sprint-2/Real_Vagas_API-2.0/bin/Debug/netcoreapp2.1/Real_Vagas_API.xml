<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Real_Vagas_API</name>
    </assembly>
    <members>
        <member name="M:Real_Vagas_API.Controllers.AdicionalController.SolicitarCodigo(Real_Vagas_API.ViewModels.CodigoViewModel)">
            <summary>
            Controller responsável por enviar um codigo para redefinir a senha para email para quem solicitou.
            </summary>
            <response code="200">Retorna status code 200 ok, enviar um codigo para email da pessoa.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o email solicitado não existir no sistema.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdicionalController.RedefinirSenha(Real_Vagas_API.ViewModels.RedefinirViewModel)">
            <summary>
            Controller responsável por redefinir a senha do usuário através do codigo enviado para email da pessoa.
            </summary>
            <response code="200">Retorna status code 200 ok, redefinir a senha do usuário.</response>
            <response code="404">Retorna status code 404 não autorizado, caso o codigo tenha expirado.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.CadastrarAdministrador(Real_Vagas_API.Domains.DbUsuarios)">
            <summary>
            Controller responsavél por criar um usuário do tipo administrador. 
            </summary>
            <response code="201">Retorna status code 201 caso for criado e usuário será criado no sistema.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso o email já estiver cadastrado no sistema.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.CadastrarAluno(Real_Vagas_API.Domains.DbUsuarios)">
            <summary>
            Controller responsavél por criar um novo usuário do tipo aluno. 
            </summary>
            <response code="201">Retorna status code 201 e usuário será criado no sistema.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o email já estiver cadastrado no sistema.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.CadastrarEmpresa(Real_Vagas_API.Domains.DbEmpresas)">
            <summary>
            Controller responsavél por criar um novo usuário do tipo empresa.
            </summary>
            <response code="201">Retorna status code 201 usuário será criado no sistema.</response>
            <response code="404">Retorna status code 401 não encontrado, caso o email já estiver cadastrado no sistema.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.ListarEmpresas">
            <summary>
            Controller responsavél por listar todos os usuários do tipo empresa.
            </summary>
            <response code="200">Retorna status code 200 OK, listar todos os usuários do tipo empresa.</response>
            <response code="404">Retorna status code 404 não encontrado, caso não tiver nenhuma empresa cadastrada.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.ListarAluno">
            <summary>
            Controller responsavél por listar todos os usuários do tipo aluno e ex-aluno.
            </summary>
            <response code="200">Retorna status code 200 OK, listar de todos os alunos cadastras.</response>
            <response code="404">Retorna status coide 404 não encontrado, caso não tiver nenhum aluno cadastrado.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.ListarAdministrador">
            <summary>
            Controller responsavél por listar todos usuários do tipo administrador.
            </summary>
            <response code="200">Retorna status code 200 OK, listar todos os usuários do tipo administrador</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não existe nenhum administrador cadastrado</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.DeletarEmpresa(System.Int32)">
            <summary>
            Controller responsavél por deletar um usuário do tipo empresa.
            </summary>
            <param name="ID"></param>
            <response code="202">Retorna status code 202 aceito, caso o ID for existente, assim deletado a empresa do sistema.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o ID não for existe no sistema.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.DeletarAdministrador(System.Int32)">
            <summary>
            Controller responsavél por deletar um usuário do tipo administrador.
            </summary>
            <response code="202">Retorna status code 202 aceito, caso o ID for existente deletado o administador do sistema.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o ID não existe no sistema.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.BuscarPorEmpresa(Real_Vagas_API.ViewModels.EmpresaViewModel)">
            <summary>
            Controller responsável por buscar uma usuário do tipo empresa apartir do cnpj ou email.
            </summary>
            <response code="200">Retorna status code 200 ok, listar os dados do usuário buscado.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o email ou cnpj informado não existir.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.DeletarInscricao(System.Int32)">
            <summary>
            Controller responsável por deletar uma inscrição pelo seu ID.
            </summary>
            <response code="202">Retorna status code 202 aceito, deletar a inscrição do sistema.</response>
            <response code="404">Retorna staus code 404 não encontrado, caso o ID informado não existir no sistema.</response>        
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.AdministradorController.DeletarUsuario(System.Int32)">
            <summary>
            Controller responsável por deletar um usuário do tipo aluno e ex-aluno.
            </summary>
            <response code="202">Retorna status code 202 aceito, deletar o usuário do sistema.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o ID informado não existir no sistema.</response>        
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api.</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.DadosController.Get">
            <summary>
            Controller responsavél por listar todos dados do sistema.
            </summary>
            <response code="200">Retorna status code 200, listar todos dados do sistema.</response>
            <response code="404">Retorna status code 404 um não encontrado, não tiver nenhum dado.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.DadosController.GetByid(System.Int32)">
            <summary>
            Controller responsavél por buscar um dado pelo ID.
            </summary>
            <response code="200">Retorna status code 200, listar o dado buscado pelo ID.</response>   
            <response code="404">Retorna status 404 um não encontrado, caso nenhum dado for encontrado com aquele ID.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.DadosController.Post(Real_Vagas_API.Domains.DbDados)">
            <summary>
            Controller responsavél por cadastrar um novo dado.
            </summary>
            <response code="201">Retorna status code 201 criado, e o dado será cadastrado.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.DadosController.Put(System.Int32,Real_Vagas_API.Domains.DbDados)">
            <summary>
            Controller responsavél por atualizar um dado.
            </summary>
            <response code="204">Retorna status 404 um não encontrado caso o email já estiver cadastrado no sistema.</response>   
            <response code="404">Retorna status 404 um não encontrado caso o email já estiver cadastrado no sistema.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.DadosController.Delete(System.Int32)">
            <summary>
            Controller responsavél por deletar um dado.
            </summary>
            <response code="202">Retorna status 404 um não encontrado caso o email já estiver cadastrado no sistema.</response>   
            <response code="404">Retorna status 404 um não encontrado caso o email já estiver cadastrado no sistema.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.EmpresasController.DeletarEmpresa(System.Int32)">
            <summary>
            Controller Responsavél por deletar usuário do tipo empresa.
            </summary>
            <response code="202">Retorna status code 202 aceito, caso o ID for existente, assim deletado o usuário do tipo empresa do sistema.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o ID não existe no sistema.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.EmpresasController.ListarEmpresas">
            <summary>
            Controller responsável por listar todos os usuários do tipo empresa do sistema.
            </summary>
            <response code="200">Retorna status code 200 OK, listar todos usuários do tipo empresa.</response>
            <response code="404">Retorna status code 404 não encontrado, caso não existir empresa.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.EmpresasController.CadastraEmpresa(Real_Vagas_API.Domains.DbEmpresas)">
            <summary>
            Controller responsável por cadastrar uma empresa no sistema.
            </summary>
            <response code="201">Retorna status code 201 foi criado a empresa, cadastrado um usuário tipo empresa</response>
            <response code="400">Retorna status code 400 bad request, caso a empresa já estiver cadastrada.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.EmpresasController.AtualizarEmpresa(Real_Vagas_API.Domains.DbEmpresas)">
            <summary>
            Controller responsável por atualizar os dados de uma empresa no sistema.
            </summary>
            <response code="200">Retorna status code 200 ok, os dados serão atualizados no banco de dados. </response>
            <response code="404">Retorna status code 404 não encontrado, caso o ID informado não existir.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.EmpresasController.BuscarPorEmpresa(Real_Vagas_API.ViewModels.EmpresaViewModel)">
            <summary>
            Controller responsável por buscar dados do banco de dados apartir do email ou cnpj.
            </summary>
            <response code="200">Retorna status code 200 ok, listar os dados buscados. </response>
            <response code="404">Retorna status code 404 não encontrado, caso o email ou cnpj informado não estiver cadastrados.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.EmpresasController.BuscarPeloID(System.Int32)">
            <summary>
            Controller responsável por buscar dados de uma empresa apartir do seu ID.
            </summary>
            <response code="200">Retorna status code 200 ok, listar o dados da empresa pelo ID informado.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o ID informado não existir.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.EmpresasController.VagasCadastradasEm30Dias(System.Int32)">
            <summary>
            Controller responsável por buscar todas as vagas cadastradas nós últimos 30 dias por uma empresa, apartir do ID da empresa.
            </summary>
            <response code="200">Retorna status code 200 ok, as vagas cadastradas com ID da empresa nós últimos 30 dias.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o ID informado não existir ou não existir vagas cadastradas com esse ID nós últimos 30 dias.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.EmpresasController.CurriculosRecebidosEm30Dias(System.Int32)">
            <summary>
            Controller responsável por buscar todos os currículos inscritos nas vagas de uma empresa nós últimos 30 dias, apartir do ID da empresa.
            </summary>
            <response code="200">Retorna status code 200 ok, todos os currículos inscritos nas vagas da empresa nós últimos 30 dias.</response>
            <response code="404">Retorna status code 404 não encontrado, caso o ID informado não existir ou não existir currículos inscritos numa vaga nós últimos 30 dias.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.InscricaoController.Get">
            <summary>
            Controller responsavél por listar todas as inscrições do sistema.
            </summary>
            <response code="200">Retorna status code 200 OK, listar todas inscrições do sistemas.</response>
            <response code="404">Retorna status code 404 não encontrado, não tiver nenhuma inscrição cadastrada.</response>
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.InscricaoController.ListarById(System.Int32)">
            <summary>
            Controller responsavél por listar todas as inscrições de usuário pelo seu ID.
            </summary>
            <response code="200">Retorna status code 200 OK, listar todas inscrições do usuário solicitado.</response>
            <response code="404">Retorna status code 404 não encontrado, caso não existir nenhuma inscrição com aquele ID no sistema.</response>
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.InscricaoController.ListarByIdEmpresa(System.Int32)">
            <summary>
            Controller responsavél por listar todas as inscrições de empresa pelo seu ID.
            </summary>
            <response code="200">Retorna status code 200 OK, listar todas inscrições daquela empresa.</response>
            <response code="404">Retorna status code 404 não encontrado, caso não existir nenhuma inscrição no sistema.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.InscricaoController.ListarByIdVaga(System.Int32)">
            <summary>
            Controller responsavél por listar todas as inscrições de uma vaga pelo seu ID.
            </summary>
            <response code="200">Retorna status code 200 OK, listar todas inscrições daquela vaga.</response>
        </member>
        <member name="M:Real_Vagas_API.Controllers.InscricaoController.post(Real_Vagas_API.Domains.DbInscricao)">
            <summary>
            Controller responsavél por cadastrar uma inscrição.
            </summary>
            <response code="200">Retorna status code 201 criado, cadastra uma nova inscrição.</response>
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.InscricaoController.GetById(System.Int32)">
            <summary>
            Controller responsavél por buscar uma inscrição pelo seu ID.
            </summary>
            <response code="200">Retorna status code 200 OK, listar a inscrição solicitada.</response>
            <response code="404">Retorna status code 404 não encontrado, caso não existir nenhuma inscrição pelo o ID.</response>
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.InscricaoController.Deletar(System.Int32)">
            <summary>
            Controller responsavél por deletar uma inscrição pelo seu ID.
            </summary>
            <response code="200">Retorna status code 200 OK, deletar a inscrição do sistema.</response>
            <response code="404">Retorna status code 404 não encontrado, caso não existir o ID.</response>
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.InscricaoController.Put(System.Int32,Real_Vagas_API.Domains.DbInscricao)">
            <summary>
            Controller responsavél por atualizar uma inscrição pelo seu ID e body.
            </summary>
            <response code="204">Retorna status code 204 aceito, atualizar uma inscrição.</response>
            <response code="404">Retorna status code 404 não encontrado, caso não existir nenhuma inscrição daquele ID.</response>
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.LoginController.Login(Real_Vagas_API.ViewModels.LoginViewModel)">
            <summary>
            Controller responsavél por emitir um token para verificar o usuário.
            </summary>
            <response code="200">Retorna status code 200, emitir um token de 30 minutos.</response>
            <response code="404">Retorna status code 404 um não encontrado, não achar nenhum usuário com aquele email e senha.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.TipoUsuarioController.Post(Real_Vagas_API.Domains.DbTipoUsuario)">
            <summary>
            Controller responsavél por cadastrar um novo tipo de usuário.
            </summary>
            <response code="201">Retorna status code 200, listar todos tipo de usuários do sistema.</response>
            <response code="403">Retorna status code 404 um não encontrado, não tiver nenhum tipo de usuário.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.TipoUsuarioController.Delete(System.Int32)">
            <summary>
            Controller responsavél por deletar um tipo de usuário.
            </summary>
            <response code="200">Retorna status code 200, deletar um tipo de usuário.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não existir o ID.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.TipoUsuarioController.Get">
            <summary>
            Controller responsavél por listar todos tipo de usuários.
            </summary>
            <response code="200">Retorna status code 200, listar todos tipo de usuários do sistema.</response>
            <response code="404">Retorna status code 404 um não encontrado, se não encontrar nenhum tipo de usuário.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.TipoUsuarioController.GetId(System.Int32)">
            <summary>
            Controller responsavél por buscar um tipo de usuário pelo seu ID.
            </summary>
            <response code="200">Retorna status code 200, buscar o tipo de usuário pelo seu ID.</response>
            <response code="404">Retorna status code 404 um não encontrado, se não existir o ID.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.TipoUsuarioController.PulIdUrl(System.Int32,Real_Vagas_API.Domains.DbTipoUsuario)">
            <summary>
            Controller responsavél por atualizar um tipo de usuário pelo ID e body.
            </summary>
            <response code="200">Retorna status code 200, atualizar um tipo de usuário.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso o ID do tipo de usuário não exista.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.UsuariosController.Get">
            <summary>
            Controller responsavél por listar todos os usuários.
            </summary>
            <response code="201">Retorna status code 200, listar todos usuários.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não tiver nenhum usuário no sistema.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.UsuariosController.GetById(System.Int32)">
            <summary>
            Controller responsavél por buscar um usuário pelo seu ID
            </summary>
            <response code="200">Retorna status code 200, listar usuário buscado pelo seu ID.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não existir seu ID.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.UsuariosController.Post(Real_Vagas_API.Domains.DbUsuarios)">
            <summary>
            Controller responsavél por cadastrar um novo usuário.
            </summary>
            <response code="201">Retorna status code 201, cadastrar um novo usuário</response>
            <response code="404">Retorna status code 404 não autorizado, caso de problema com cadastro.</response>   
            <response code="403">Retorna stauts code 403 Forbidden, caso de problema com api.</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.UsuariosController.Put(System.Int32,Real_Vagas_API.Domains.DbUsuarios)">
            <summary>
            Controller responsavél por atualizar um usuário existente.
            </summary>
            <response code="200">Retorna status code 200, atualizar um usuário.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não existir o ID do usuário.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.UsuariosController.Delete(System.Int32)">
            <summary>
            Controller responsavél deletar um usuário pelo ID.
            </summary>
            <response code="200">Retorna status code 200, deletar um usuário pelo seu ID.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso o ID não existir.</response>   
        </member>
        <member name="M:Real_Vagas_API.Controllers.VagasController.Get">
            <summary>
            Controller responsavél por listar todas as vagas.
            </summary>
            <response code="200">Retorna status code 200, listar todas as vagas.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não tiver nenhuma vaga cadastrar.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.VagasController.Post(Real_Vagas_API.Domains.DbVagas)">
            <summary>
            Controller responsavél por cadastrar uma nova vaga no sistema.
            </summary>
            <response code="200">Retorna status code 200, cadastrar uma nova vaga.</response>
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.VagasController.GetById(System.Int32)">
            <summary>
            Controller responsavél por buscar uma vaga pelo seu ID.
            </summary>
            <response code="200">Retorna status code 200, listar a vaga buscada pelo ID.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não existir uma vaga com ID.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.VagasController.Put(System.Int32,Real_Vagas_API.Domains.DbVagas)">
            <summary>
            Controller responsavél por atualizar uma vaga.
            </summary>
            <response code="200">Retorna status code 200, vaga será atualizada.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não existir o ID.</response> 
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.VagasController.GetByEmpresa(System.Int32)">
            <summary>
            Controller responsavél por listar todas vagas de empresa pelo ID.
            </summary>
            <response code="200">Retorna status code 200, listar todas vagas daquela empresa.</response>
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Controllers.VagasController.Delete(System.Int32)">
            <summary>
            Controller responsavél por deletar um vaga pelo o ID.
            </summary>
            <response code="202">Retorna status code 202 accepted, deletar uma vaga pelo ID.</response>
            <response code="404">Retorna status code 404 um não encontrado, caso não encontrar nenhuma vaga.</response>   
            <response code="400">Retorna stauts code 400 bad request, caso de conflito com api</response> 
        </member>
        <member name="M:Real_Vagas_API.Interfaces.IDados.BuscarPorId(System.Int32)">
            <summary>
            Buscar um pelo ID do dado.
            </summary>
            <param name="id">ID do usuário buscado</param>
            <returns>Um usuário buscado</returns>
        </member>
        <member name="M:Real_Vagas_API.Interfaces.IDados.Cadastrar(Real_Vagas_API.Domains.DbDados)">
            <summary>
            Cadastra um novo dado
            </summary>
        </member>
        <member name="M:Real_Vagas_API.Interfaces.IDados.Atualizar(System.Int32,Real_Vagas_API.Domains.DbDados)">
            <summary>
            Atualizar um dado
            </summary>
        </member>
        <member name="M:Real_Vagas_API.Interfaces.IDados.Deletar(System.Int32)">
            <summary>
            Deletar um dado
            </summary>
        </member>
        <member name="M:Real_Vagas_API.Interfaces.IUsuarios.BuscarPorId(System.Int32)">
            <summary>
            Busca um usuário através do ID
            </summary>
            <param name="id">ID do usuário buscado</param>
            <returns>Um usuário buscado</returns>
        </member>
        <member name="M:Real_Vagas_API.Interfaces.IUsuarios.Cadastrar(Real_Vagas_API.Domains.DbUsuarios)">
            <summary>
            Cadastra um novo usuário
            </summary>
            <param name="novoUsuario">Objeto novoUsuario que será cadastrado</param>
        </member>
        <member name="M:Real_Vagas_API.Interfaces.IUsuarios.Atualizar(System.Int32,Real_Vagas_API.Domains.DbUsuarios)">
            <summary>
            Atualiza um usuário existente
            </summary>
            <param name="id">ID do usuário que será atualizado</param>
            <param name="usuarioAtualizado">Objeto com as novas informações</param>
        </member>
        <member name="M:Real_Vagas_API.Interfaces.IUsuarios.Deletar(System.Int32)">
            <summary>
            Deleta um usuário
            </summary>
            <param name="id">ID do usuário que será deletado</param>
        </member>
    </members>
</doc>
